/* Alteração do Box Model - Regra padrão */
*, *::after, *::before {box-sizing: border-box;}

/* Sempre declarar o tamanho da fonte do projeto como no modelo a seguir, que neste caso foi diminuido. */
html {font-size: 14px;}

body {
    background: rgb(255, 250, 228);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    
    /* técnica para deixar o footer no espaçamento de rodapé
    ETAPA 1.
    acrescentar as linhas de códigos combinadas abaixo;

    ETAPA 2.
    fazer o conteúdo (tag main) ocupar todo o espaço necessário para empurrar o rodapé para baixo
    
    para visualizar a alteração colocar uma cor de fundo no main
    
    */
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

main {
    flex: 1;
    background-color: rgb(253, 253, 224);
}

img {max-width: 100%;}
/* com esta formatação a imagem ficará responsiva junto com a largura do site */


body, h1, h2, h3, p, figure {
    margin: 0;
    padding: 0;
}
/* Reset - remover valores padronizados nas TAGs . É uma espécie de limpeza*/

h1 {
    font-size: 1.5rem;
    font-family: Arial, Helvetica, sans-serif;
    /* font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif; */
    font-weight: bold;
}

a {
    text-decoration: none;   
}

h1 a {
    background-color: black;
    color: aliceblue;
    border-radius: 5px;
    padding: 0.3rem 1.1rem;
   
}

h1:hover {
    background-color: rgb(12, 12, 12);
    color: rgb(241, 241, 207);
    border-radius: 5px;
    padding: 0.2rem 1.2rem;
    transition: .09s;
}

header {
    text-transform: uppercase;
    background-color: rgb(241, 241, 207);
    position: sticky; /*este recurso é muito utilizado para deixar o cabeçalho fixo*/
    top: 0;

    z-index: 1000;
    /* z-index, sempre que usar a propriedade position, poderá usar controla a profundidade. Ajustes de profundidade. Quanto maior, mais à frente fica
    /* justify-content:space-between; */
    /* align-items: center; */
    /* max-width: 1200px; */

}

/* Esta estratégia muito utilizada para realizar cabeçalhos responsivos e centralizados */
/* Regra para um elemento (no caso, uma div) com a classe limitador E dentro do header o flex configurado aqui funcionará
somente para a classe limitador, aplicada na div dentro do head. Além disso, ela também estará recebendo max-width 
e margin vindos da regra da classe.*/

header .limitador{
    height: 11vh;
    /* background-color: blueviolet; */
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.limitador {
    max-width: 1100px;
    margin: auto;
    width: 90%;
}

nav h2 {
    text-align: right;}

nav h2 a {
    color: black;
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;
}

/* sempre que utilizar o "a:hover" também utilizar o "a:focus" 
para conseguir a:hover irá sinalizar ao redor quando passar o mouse e o a:focus, irá sinalizar 
pela tecla TAB */

nav h2 a:hover,
nav h2 a:focus,
.links-menu a:hover,
.links-menu a:focus {
    background-color: rgb(241, 241, 207);
    border-radius: 20%;
    box-shadow: 10px 10px 35px rgb(116, 116, 82);
}

.links-menu{
    list-style: none;
    padding: 0;
    margin: 0;
    display: none;
    /* esta propriedade será utilizada para esconder a lista */
}


/* display flex habilita justify-content: center e align-items: center */

.links-menu a {
    color: black;
    font-weight: bold;
    /* background-color: yellow; */
    display: flex;
    height: 50px;
    justify-content: center;
    align-items: center;
    background-color: whitesmoke;
}


/* Esta regra só irá funcionar quando as duas classes estiverem juntas (links-menu e aberto).
Obs.: esta regra só será aplicada posteriormente com o auxílio da programação "java-script".
links estão juntas no mesmo elemento sem o "espaço".
*/

/* display flex também pode colocar em colunas com a propriedade */
/* flex-direction deixa em colunas  */
/* position: absolute;  sobre-escreveu ou seja, sobrepôs ao texto*/
/* right: 0; puxou para a direita, o bloco - abriu*/
/* left: 0; puxou para a esquerda o bloco e expandiu o espaço*/
/* flex-direction também tem a propriedade linha */

.links-menu.aberto{
    /* Neste ponto, usamos o l=flex para voltar a exibir o menu (quando aberto) */
    display: flex;
    flex-direction: column;
    position: absolute;
    right: 0;
    left: 0;
}

.destaque{
    background-image: url(../imagens/fundo-destaque.jpg);
    color: aliceblue;
    height: 90vh;
    background-size: cover;
    background-attachment: fixed;
    text-align: center;

    display: flex;
    flex-wrap: wrap;
    /* sempre que usar o wrap, precisa colocar direcionamento */
    justify-content: center;

    /* usando o content, não precisou de usar o align-itens */
    /* align-items: center; */

    /* esta propriedade alinha tudo (h2 e p) ao centro */
    align-content: center;
}

/* Sem esta definição de tamanho o FLEX-WRAP (que gera uma quebra de elementos não irá funcionar */
.destaque h2, 
.destaque p {
    width: 100%;
}

/* tamanho de fontes responsivas 
funão clamp(mínimo, ideal, máximo)*/


.destaque h2 {
    font-size:clamp(2rem, 10vw, 7rem);
    animation-name: aparecer;
    animation-duration: 4s;

    /* animation-iteration-count: infinite;  infinit*/
    /* animation-direction: alternate-reverse; */
    /* Etapa 2: chamar e configuarar a animação */
}

.conteudo {
    background-color: rgb(255, 255, 213);
    padding: 0.7rem;
    border-radius: 7px;
}

.conteudo h2 {
    text-align: center;
}

table, th, td {
    border: solid 2px black;
    /* propriedade que faz tirar os espaços entre as bordas */
    border-collapse: collapse;
}

table {
    height: 80%;
    max-width: 600px;
    margin: auto;
    /* margin: auto; deixa a tabela reduzida */
    align-items: center;
}

caption {
    font-weight: bold;
    text-transform: uppercase;
    font-size: 1.1rem;
    padding-bottom: 5px;
}

th {
    background-color: black;
    color: white;
    font-size: 1.1rem;
    padding: .5rem;
    justify-content: center;
}


td {background-color: white;
    font-size: 1.rem;
}

td:last-child {
    font-weight: bold;
    text-align: right;
    padding-right: 5px;
}


/* formatando os últimos td's */
td:first-child {
    text-transform: uppercase;
}


/* formatando os segundos td's */
td:nth-child(2) {
    text-align: center;
}

/* even: par e odd ímpar (formata pelas impáres ou pares)*/

tr:nth-child(odd) {
    background-color: #ccc;
}

form {
    background-color: rgb(219, 219, 179);
    width: 95%;
    margin: auto;
    padding: 1.2rem;
    border-radius: 10px;
}

/* Pseudo-classe  :not 
Permite criar excessões para determinadas classes
para determinadas regras.

Abaixo, estamos pegando todos os inputs exceto os do tipo radio e checkbox
*/
input:not([type=radio]):not([type=checkbox]), select, textarea {
    border: none;
    padding: 0.5%;
    width: 100%;
    height: 40px;
}

textarea {height: auto;}

button {
    background-color: black;
    color: azure;
    border: none;
    padding: 1rem;
    font-weight: bold;
}

form div {
    margin-top: 1rem;
}



.destaque p {
    font-size:clamp(1.5rem, 3vw, 4rem);
    font-weight: bold;


    /* Sintaxe COMPLETA */
        /* animation-name: aparecer;
        animation-duration: 3s;
        animation-delay: 2s;
        animation-fill-mode: backwards; */
    /* animation-fill-mode: backwards; começa a animação do momento reverso} */



    /* Sintaxe COMPLETA */
    animation: aparecer 3s 3s backwards;
}

    /* Regra de Animação */

    /* Chamar a Animação */

    /* @keyframes quadros-chaves 
    técnicas de animação
    nome da animação
    aparecer 
    sugir
    */




@keyframes aparecer {
    from { 
        
        opacity: 0;
        transform: translateY(-100vh);
    }  /*de*/
    to {
        opacity: 1;
        transform: translateY(0vh);
    
        } /*para*/
}

.front-end, .historia, .localizacao {text-align: center;}

.address {padding: 0.2rem;}

article h2 {padding: 1rem;}
/* houve um espaçamento */

article p {padding: 0.5rem 0; }
/* houve um espaçamento */

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-size: cover;
    background-attachment: fixed;
}

.historia h2  {
    color: white;
    text-shadow: black 1px 1px 5px;
}

.historia iframe{
    width: 100%;
    max-width: 700px;
}

footer{
    background-color: black;
    color: azure;
    height: 18vh;
    font-weight: bold;
    display: flex;
    justify-content: center;
    text-align: center;
    align-items: center;
    /* display: flex */
}

@media screen and (min-width: 500px) {
    nav h2 {display: none;}
    nav {
        /* background-color: yellow; cor foi utilizada como teste*/
        /* justify-content: center; */
        width: 70%;
    }
    .links-menu {display: flex;}
    .links-menu li {
        /* border: solid 1px rgb(226, 186, 7); foi usado como teste para visualizar */
        width: 100%;
    }

    @media screen and (min-width: 800px) {
        html {font-size: 18px;}
        header .limitador {height: 15;}
        .destaque { height: 85vh;}
    }                
} 